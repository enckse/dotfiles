#!/bin/sh
load_comps() {
  [ ! -e "$HOME/.config/dotfiles/completions" ] && return
  . "$HOME/.config/dotfiles/completions"
  for FILE in $(find "$SHELL_COMPS" -type f -name "*.sh"); do
    . "$FILE"
  done
}

ssh_agent() {
  envfile="$HOME/.local/state/ssh-agent.env"
  mkdir -p "$(dirname "$envfile")"
  if ! pgrep -u "$USER" '^ssh-agent$' > /dev/null; then
    ssh-agent > "$envfile"
  fi
  export SSH_AUTH_SOCK="$HOME/.local/state/ssh-agent.socket"
  if [ ! -f "$SSH_AUTH_SOCK" ]; then
    . "$envfile" > /dev/null
  fi
  ssh-add "$HOME/.ssh/"*.privkey >/dev/null 2>&1
}

shell_ready() {
  unset -f load_comps ssh_agent shell_ready
}

export SHELL_COMPS="$HOME/.local/share/completions"
[ -e "$PKGV_STORE/env" ] && source "$PKGV_STORE/env"

export SECRET_ROOT="$HOME/.ttypty/secrets"
[ -z "$EDITOR" ] && export EDITOR=vim
export VISUAL="$EDITOR"
export GIT_EDITOR="$EDITOR"
command -v go > /dev/null && \
  export GOPATH="$HOME/.cache/go" && \
  export GO_DEVTOOLS="mvdan.cc/gofumpt \
                      golang.org/x/tools/gopls \
                      honnef.co/go/tools/cmd/staticcheck \
                      github.com/enckse/lockbox/cmd/lb \
                      github.com/mgechev/revive"
[ -d "$GOPATH" ] && export PATH="$GOPATH/bin:$PATH"
[ -d "$HOME/.local/bin" ] && export PATH="$HOME/.local/bin:$PATH"
[ "$EDITOR" != vim ] && alias vim="$EDITOR"

alias vi="\$EDITOR"
alias less="less -R"
if command -v bat > /dev/null; then
  alias cat=bat
  export BAT_OPTS="-pp --theme 'Monokai Extended'"
fi
command -v rg > /dev/null && alias grep="rg"
if command -v delta > /dev/null; then
  export GIT_PAGER=delta
  export DELTA_PAGER="less -R -c -X"
fi

if [ -n "$GO_DEVTOOLS" ]; then
  if [ -n "$CONTAINER_IDENTIFIER" ] || [ -n "$TOOLS_IDENTIFIER" ]; then
    devtools() {
      IDENTIFIER="$TOOLS_IDENTIFIER$CONTAINER_IDENTIFIER"
      CACHEDIR="$HOME/.cache/devtools"
      mkdir -p "$CACHEDIR"
      IDENTIFIER="$CACHEDIR/$(echo "$IDENTIFIER" | sha256sum | cut -c 1-7)"
      [ -z "$1" ] && [ -e "$IDENTIFIER" ] && return
      [ -n "$1" ] && [ "$1" != "--force" ] && echo "unknown argument: $1" && return
      find "$CACHEDIR" -type f -mtime +1 -delete
      if [ -n "$GOPATH" ]; then
        for TOOL in $GO_DEVTOOLS; do
          echo "installing: $TOOL"
          go install "$TOOL@latest"
        done
      fi
      touch "$IDENTIFIER"
      unset CACHEDIR IDENTIFIER TOOL
    }
  fi
fi
