#!/bin/sh
SHELL_NAME=$(basename "$SHELL")
case "$SHELL_NAME" in
  "bash")
    for FILE in bash.bashrc bash_completion; do
      [ -e "/etc/$FILE" ] && source "/etc/$FILE"
    done
    ;;
  "zsh")
    autoload -Uz compinit && compinit
    bindkey '\e[H' beginning-of-line
    bindkey '\e[F' end-of-line
    ;;
esac

_motdheader() {
  echo "[$1]"
  echo "==="
}

_motd() {
  data=$($@)
  if [ -z "$data" ]; then
    return
  fi
  _motdheader "$1"
  echo "$data"
  echo
}

_caches() {
  for dir in ".cache/staticcheck" \
             ".cache/gopls" \
             ".cache/go-build" \
             ".cache/vim" \
             ".local/state/nvim/swap" \
             ".local/state/nvim/undo"; do
    dir="$HOME/$dir"
    [ -d "$dir" ] && find "$dir" -type f -mtime +1 -delete
  done
}

_caches
unset -f _caches

sshagent() {
  LOCAL_AGENT=1
  [ -e "$HOME/.config/dotfiles/ssh-agent" ] && LOCAL_AGENT=0
  if [ "$LOCAL_AGENT" -eq 1 ]; then
    envfile="$HOME/.local/state/ssh-agent.env"
    mkdir -p "$(dirname "$envfile")"
    if ! pgrep -u "$USER" '^ssh-agent$' > /dev/null; then
      ssh-agent > "$envfile"
    fi
    export SSH_AUTH_SOCK="$HOME/.local/state/ssh-agent.socket"
    if [ ! -f "$SSH_AUTH_SOCK" ]; then
      . "$envfile" > /dev/null
    fi
  fi
  ssh-add "$HOME/.ssh/"*.privkey >/dev/null 2>&1
}

sshagent
unset -f sshagent

export SECRET_ROOT="$HOME/.ttypty/secrets"
[ -e "$HOME/.config/dotfiles/editor" ] && DOTFILES_EDITOR=$(cat "$HOME/.config/dotfiles/editor") && EDITOR="$DOTFILES_EDITOR" && export DOTFILES_EDITOR EDITOR
export VISUAL="$EDITOR"
export GIT_EDITOR="$EDITOR"
export GOPATH="$HOME/.cache/go"
export PATH="$GOPATH/bin:$PATH"
[ -d "$HOME/.local/bin" ] && export PATH="$HOME/.local/bin:$PATH"
if [ -d "$HOME/.local/share/pkgtools" ]; then
    for FILE in $(find "$HOME/.local/share/pkgtools" -type f); do
        . "$FILE"
    done
fi

alias vi="$EDITOR"
alias less="less -R"
if command -v bat > /dev/null; then
  alias cat=bat
  export BAT_OPTS="-pp --theme 'Monokai Extended'"
fi
command -v rg > /dev/null && alias grep="rg"
if command -v delta > /dev/null; then
  export GIT_PAGER=delta
  export DELTA_PAGER="less -R -c -X"
fi

if [ -e "$HOME/.config/dotfiles/wac" ]; then
  if command -v wac > /dev/null; then
    _motd wac motd
    wac manage
  else
    _motdheader wac
    echo "-> unavailable"
    echo
  fi
fi

export EDITOR=vim

[ "$EDITOR" != "vim" ] && alias vim="$EDITOR"
if command -v git-uncommitted > /dev/null; then
  _motd git uncommitted
fi

case "$SHELL_NAME" in
  "bash")
    USE_HOST="\h"
    [ -n "$IS_CONTAINER" ] && USE_HOST="$IS_CONTAINER"
    PS1="[\u@\[\e[93m\]$USE_HOST\[\e[0m\]:\W]$ "
    command -v git-uncommitted >/dev/null && PS1="\$(git uncommitted pwd 2>/dev/null)$PS1"
    ;;
  "zsh")
    zstyle ':completion:*:*:git:*' user-commands uncommitted:'show uncommitted changes'
    autoload -U promptinit && promptinit
    precmd() {
      GIT_UNCOMMIT=""
      if command -v git-uncommitted >/dev/null; then
          GIT_UNCOMMIT=$(NO_COLOR=1 git uncommitted pwd 2>/dev/null)
          COLORING="%{$(tput setaf 1)%}"
          if [ "$GIT_UNCOMMIT" = "(clean)" ]; then
            COLORING="%{$(tput setaf 2)%}"
          fi
          GIT_UNCOMMIT="$COLORING$GIT_UNCOMMIT"
      fi
      PS1="$GIT_UNCOMMIT%{$(tput setaf 226)%}%n%{$(tput setaf 15)%}@%{$(tput setaf 200)%}%m %{$(tput setaf 45)%}%1~ %{$(tput sgr0)%}$ "
    }
    ;;
esac
