#!/bin/sh -ue
CONFIG="$HOME/.config/dotfiles/devtools"
[ ! -e "$CONFIG" ] && exit 0
. "$CONFIG"
IDENTIFIER="$(dev_id)"
[ -z "$IDENTIFIER" ] && exit 0
IDENTIFIER="$IDENTIFIER.$(sha256sum "$CONFIG" | cut -c 1-7)"
CACHE="$HOME/.cache/devtools"
IDENTIFIER="$CACHE/$(echo "$IDENTIFIER" | sha256sum | cut -c 1-7)"
FORCE=0
[ $# -ge 1 ] && [ -n "$1" ] && [ "$1" = "--force" ] && FORCE=1
[ "$FORCE" -eq 0 ] && [ -e "$IDENTIFIER" ] && exit 0
echo "initializing develepment tools..."
mkdir -p "$CACHE"
find "$CACHE" -type f -mtime +1 -delete

_go_tools() {
  [ -z "$GOPATH" ] && return
  for BIN in $(go_tools); do
    echo "installing go tool: $BIN"
    if ! go install "$BIN@latest"; then
      echo "  ^^^ failed ^^^"
      exit 1
    fi
  done
}

_vim_plugins() {
  VIM_PLUGINS="$HOME/.config/vim/pack/plugin/start"
  mkdir -p "$VIM_PLUGINS"
  for PLUGIN in $(vim_plugins); do
    NAME="$(basename "$PLUGIN")"
    DEST="$VIM_PLUGINS/$NAME"
    echo "configuring vim plugin: $NAME"
    ERRORED=0
    if [ ! -d "$DEST" ]; then
      echo "-> cloning"
      if ! git clone --quiet "$PLUGIN" "$DEST"; then
        ERRORED=1
      fi
    fi
    if [ "$ERRORED" -eq 0 ]; then
      echo "-> updating"
      if ! git -C "$DEST" pull --quiet; then
        ERRORED=1
      fi
    fi
    if [ "$ERRORED" -eq 1 ]; then
      echo "  ^^^ failed ^^^"
      exit 1
    fi
  done
}

_rust_tools() {
  for TOOL in $(rust_tools); do
    rustup add component "$TOOL"
  done
}

_npm_tools() {
  for TOOL in $(npm_tools); do
    npm install -g "$TOOL"
  done
}

_go_tools
_vim_plugins
_rust_tools
_npm_tools
touch "$IDENTIFIER"
exit 0
